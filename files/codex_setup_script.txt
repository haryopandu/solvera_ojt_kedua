Di bawah ini adalah setup script idempotent yang disarankan oleh ChatGPT untuk eksekusi kode (code execution) Codex OpenAI setelah mempertimbangkan saran dari Codex. Script ini kompatibel dengan Odoo 18, PostgreSQL 17, dan Python 3.12.12 yang diinstal di WSL

#!/usr/bin/env bash
# =========================================================
#  Setup ringan & tahan banting untuk Codex/OpenAPI & WSL
#  - Default: SAFE_MODE=1 => tanpa apt, tanpa service
#  - Local WSL: jalankan SAFE_MODE=0 untuk setup penuh
# =========================================================
set -Eeuo pipefail
trap 'echo "[setup] Gagal di line $LINENO (exit $?)" >&2' ERR

# =========================
#  Variabel (bisa dioverride lewat ENV)
# =========================
USER_HOME="${USER_HOME:-/home/codex}"          # ganti ke /home/haryo bila dipakai di WSL
VENV_DIR="${VENV_DIR:-$USER_HOME/.venvs/odoo18}"
WORK_DIR="${WORK_DIR:-$USER_HOME/work}"        # untuk menaruh Odoo core
ODOO_DIR="${ODOO_DIR:-$WORK_DIR/odoo}"         # lokasi clone Odoo 18
CUSTOM_ADDONS="${CUSTOM_ADDONS:-$USER_HOME/custom_addons}"  # lokasi addon kustom
DB_NAME="${ODOO_DB_NAME:-odoo18}"

# SAFE_MODE:
#  - "1"  : ringan (default) -> skip apt, postgres, clone
#  - "0"  : berat  (khusus lokal) -> boleh apt, postgres, clone
#  - "auto": deteksi; di CI/cloud tetap anggap 1 (aman)
SAFE_MODE="${SAFE_MODE:-auto}"
if [ "$SAFE_MODE" = "auto" ]; then
  # Deteksi CI/cloud -> selalu ringan
  if [ -n "${CI:-}${GITHUB_ACTIONS:-}${CODESPACES:-}${CODEBUILD_BUILD_ID:-}${CODEX:-}" ]; then
    SAFE_MODE="1"
  else
    # Di mesin lokal, tetap default ringan kecuali eksplisit
    SAFE_MODE="1"
  fi
fi
do_heavy() { [ "$SAFE_MODE" = "0" ]; }

# =========================
#  Utilitas kecil
# =========================
# run_or_warn: jalankan perintah non-kritis; jika gagal, lanjut.
run_or_warn() { "$@" || echo "[setup] (non-kritikal) perintah gagal: $*"; }

# =========================
#  Direktori & izin dasar
# =========================
export DEBIAN_FRONTEND=noninteractive
run_or_warn mkdir -p "$USER_HOME/.cache/pip" "$USER_HOME/.cache/npm" "$USER_HOME/.odoo" "$WORK_DIR" "$CUSTOM_ADDONS" "$(dirname "$VENV_DIR")"

# chown hanya jika root; di runner non-root biasanya tidak perlu
if [ "$(id -u)" -eq 0 ]; then
  run_or_warn chown -R "$(id -u)":"$(id -g)" "$USER_HOME/.cache" "$USER_HOME/.odoo"
fi

# =========================
#  Paket sistem (opsional & hanya lokal)
# =========================
if do_heavy && command -v apt-get >/dev/null 2>&1; then
  echo "[setup] Mode berat: install paket sistem…"
  run_or_warn apt-get update -y
  run_or_warn apt-get install -y --no-install-recommends \
    git build-essential curl ca-certificates gnupg pkg-config \
    python3-dev python3-venv python3-pip python3-setuptools python3-wheel \
    libpq-dev libxml2-dev libxslt1-dev libjpeg-dev libpng-dev zlib1g-dev \
    libldap2-dev libsasl2-dev libffi-dev libssl-dev \
    fonts-dejavu-core xfonts-75dpi xfonts-base wkhtmltopdf
else
  echo "[setup] SAFE_MODE aktif: lewati install paket sistem."
fi

# =========================
#  Python venv & pip (ringan; no-op bila gagal)
# =========================
PY_BIN="${PY_BIN:-python3}"
if ! command -v "$PY_BIN" >/dev/null 2>&1; then PY_BIN="python"; fi

if command -v "$PY_BIN" >/dev/null 2>&1; then
  if [ ! -d "$VENV_DIR" ]; then
    run_or_warn "$PY_BIN" -m venv "$VENV_DIR"
  fi
  if [ -f "$VENV_DIR/bin/activate" ]; then
    # shellcheck disable=SC1090
    source "$VENV_DIR/bin/activate" || true
    run_or_warn python -m pip install --upgrade pip wheel
  fi

  # Install requirements proyek (jika ada) tapi jangan gagal keras
  if [ -f "requirements.txt" ]; then
    run_or_warn python -m pip install --upgrade --upgrade-strategy only-if-needed -r requirements.txt
  fi

  # Paket umum Odoo – gunakan binary wheels jika ada; gagal? lanjut.
  # Catatan: hindari build-from-source di cloud.
  run_or_warn python -m pip install --only-binary=:all: \
    "psycopg2-binary==2.9.9" "werkzeug" "num2words" "passlib" "babel" "pillow" "reportlab"

  # lxml sering butuh header; coba wheel dulu, jika tidak ada biarkan skip
  run_or_warn python -m pip install --only-binary=:all: "lxml"
else
  echo "[setup] Python tidak ditemukan; lanjut tanpa venv/pip."
fi

# =========================
#  PostgreSQL lokal (opsional & hanya lokal)
# =========================
if do_heavy; then
  if ! command -v psql >/dev/null 2>&1 && command -v apt-get >/dev/null 2>&1; then
    echo "[setup] Install PostgreSQL 17 (lokal)…"
    run_or_warn install -d /usr/share/postgresql-common/pgdg
    run_or_warn sh -c 'echo "deb [arch=amd64,arm64] http://apt.postgresql.org/pub/repos/apt $(. /etc/os-release && echo $VERSION_CODENAME)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
    run_or_warn curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor -o /etc/apt/trusted.gpg.d/pgdg.gpg
    run_or_warn apt-get update -y
    run_or_warn apt-get install -y postgresql-17 postgresql-client-17
  fi

  if command -v psql >/dev/null 2>&1; then
    # Init cluster lokal di $USER_HOME/pgdata (idempotent)
    if [ ! -d "$USER_HOME/pgdata" ]; then
      run_or_warn su -s /bin/bash -c "/usr/lib/postgresql/17/bin/initdb -D $USER_HOME/pgdata" postgres
    fi
    run_or_warn su -s /bin/bash -c "/usr/lib/postgresql/17/bin/pg_ctl -D $USER_HOME/pgdata -l $USER_HOME/pg.log -o '-p 5432' start" postgres
    # Buat role/db jika belum ada
    run_or_warn psql -U postgres -h 127.0.0.1 -p 5432 -tc "SELECT 1 FROM pg_roles WHERE rolname = 'odoo'" | grep -q 1 || \
      run_or_warn psql -U postgres -h 127.0.0.1 -p 5432 -c "CREATE USER odoo WITH PASSWORD 'odoo' CREATEDB;"
    run_or_warn psql -U postgres -h 127.0.0.1 -p 5432 -tc "SELECT 1 FROM pg_database WHERE datname = '${DB_NAME}'" | grep -q 1 || \
      run_or_warn psql -U postgres -h 127.0.0.1 -p 5432 -c "CREATE DATABASE ${DB_NAME} OWNER odoo;"
  else
    echo "[setup] PostgreSQL tidak tersedia; gunakan DB URI eksternal."
  fi
else
  echo "[setup] SAFE_MODE aktif: lewati PostgreSQL lokal."
fi

# =========================
#  Odoo core (opsional & hanya lokal)
# =========================
CORE_ADDONS=""
ODOO_BIN=""
if do_heavy; then
  if [ ! -d "$ODOO_DIR" ]; then
    run_or_warn mkdir -p "$WORK_DIR"
    run_or_warn git clone --depth 1 --branch 18.0 https://github.com/odoo/odoo.git "$ODOO_DIR"
  fi

  if [ -d "$ODOO_DIR/odoo/addons" ]; then
    CORE_ADDONS="$ODOO_DIR/odoo/addons"
    ODOO_BIN="$ODOO_DIR/odoo/odoo-bin"
  elif [ -d "$ODOO_DIR/addons" ]; then
    CORE_ADDONS="$ODOO_DIR/addons"
    ODOO_BIN="$ODOO_DIR/odoo-bin"
  fi
else
  echo "[setup] SAFE_MODE aktif: lewati clone Odoo core."
fi

# =========================
#  Tulis ~/.odoo/odoo.conf (aman dipakai baik lokal maupun cloud)
# =========================
DB_URI="${POSTGRES_URI:-postgresql://odoo:odoo@127.0.0.1:5432/${DB_NAME}}"
mkdir -p "$USER_HOME/.odoo"
umask 077  # izin ketat untuk file rahasia
# addons_path: repo saat ini + CUSTOM_ADDONS + (CORE_ADDONS jika ada)
ADDONS_LINE="$(pwd),${CUSTOM_ADDONS}"
if [ -n "$CORE_ADDONS" ]; then
  ADDONS_LINE="${CORE_ADDONS},${ADDONS_LINE}"
fi
cat > "$USER_HOME/.odoo/odoo.conf" <<EOF
[options]
db_uri = ${DB_URI}
addons_path = ${ADDONS_LINE}
admin_passwd = ${ODOO_ADMIN_PASSWORD:-admin}
# SMTP (opsional)
smtp_server = ${SMTP_HOST:-}
smtp_port = ${SMTP_PORT:-}
smtp_ssl = ${SMTP_SSL:-False}
smtp_user = ${SMTP_USER:-}
smtp_password = ${SMTP_PASSWORD:-}
EOF
chmod 600 "$USER_HOME/.odoo/odoo.conf"

# =========================
#  Sanity output
# =========================
echo "[OK] Setup selesai. Mode: SAFE_MODE=${SAFE_MODE}"
command -v python  && python --version || true
command -v wkhtmltopdf && wkhtmltopdf --version || true
command -v psql && psql --version || true

# Petunjuk (akan bekerja jika Odoo core tersedia & DB siap)
if [ -n "$ODOO_BIN" ]; then
  cat <<EOM

# =========================
#  Cara pakai (copy-paste)
# =========================
# Update modul Anda saja lalu berhenti:
${ODOO_BIN} -c $USER_HOME/.odoo/odoo.conf -d "${DB_NAME}" -u solvera_ojt_core --stop-after-init

# Mode dev dengan auto-reload:
${ODOO_BIN} -c $USER_HOME/.odoo/odoo.conf -d "${DB_NAME}" --dev=reload

# Catatan:
# - Di runner cloud, Odoo core & DB lokal biasanya tidak tersedia.
# - Di WSL lokal, jalankan ulang dengan SAFE_MODE=0 untuk instal penuh.
EOM
else
  echo "[info] Odoo core tidak terdeteksi (ini normal di SAFE_MODE/cloud)."
fi
